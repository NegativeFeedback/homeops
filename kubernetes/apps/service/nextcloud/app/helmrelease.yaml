---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app nextcloud
spec:
  timeout: 15m
  interval: 30m
  chart:
    spec:
      chart: nextcloud
      version: 6.5.2
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    image:
      flavor: fpm-alpine
    nginx:
      enabled: true

    nextcloud:


      extraEnv:
        - name: REDIS_HOST
          value: dragonfly.database.svc.cluster.local
        - name: REDIS_HOST_PORT
          value: "6379"

      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: NEXTCLOUD_USERNAME
        passwordKey: NEXTCLOUD_PASSWORD
        smtpUsernameKey: SMTP_USERNAME
        smtpPasswordKey: SMTP_PASSWORD
        smtpHostKey: SMTP_HOST

      host: next.gddnet.io

      mail:
        enabled: true
        fromAddress: cloud
        domain: gddnet.io
        smtp:
          host: smtp.gddnet.com
          port: 465
          authtype: LOGIN
          secure: ssl

      configs:
        logging.config.php: |-
          <?php
          $CONFIG = array (
            'log_type' => 'file',
            'logfile' => 'nextcloud.log',
            'loglevel' => 1,
            'logdateformat' => 'F d, Y H:i:s'
            );
        proxy.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' => array(
              0 => '127.0.0.1',
              1 => '10.96.0.0/16',
            ),
            'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
          );
        ingress.config.php: |-
          <?php
          $CONFIG = array (
            'overwrite.cli.url' => 'https://next.gddnet.io',
            'overwriteprotocol' => 'https',
          );
        misc.config.php: |-
          <?php
          $CONFIG = array (
            'default_phone_region' => 'US',
          );

    deploymentAnnotations:
      reloader.stakater.com/auto: "true"

    internalDatabase:
      enabled: false

    externalDatabase:
      enabled: true
      type: postgresql
      host: postgres16-rw.database.svc.cluster.local:5432
      database: service_nextcloud
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: POSTGRES_USER
        passwordKey: POSTGRES_PASSWORD

    ingress:
      enabled: true
      className: external
      annotations:
        external-dns.alpha.kubernetes.io/target: "external.gddnet.io"
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Service
        gethomepage.dev/name: NextCloud
        gethomepage.dev/icon: nextcloud.svg       
        nginx.ingress.kubernetes.io/proxy-body-size: "10G"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;
          rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
          rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
          location ~ ^\/(?:index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|oc[ms]-provider\/.+|.+\/richdocumentscode\/proxy)\.php(?:$|\/) {
              fastcgi_split_path_info ^(.+?\.php)(\/.*|)$;
              set $path_info $fastcgi_path_info;
              try_files $fastcgi_script_name =404;
              include fastcgi_params;
              fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
              fastcgi_param PATH_INFO $path_info;
              fastcgi_param HTTPS on;
              # Avoid sending the security headers twice
              fastcgi_param modHeadersAvailable true;
              # Enable pretty urls
              fastcgi_param front_controller_active true;
              fastcgi_pass php-handler;
              fastcgi_intercept_errors on;
              fastcgi_request_buffering off;
          }

      path: /
      pathType: Prefix

    persistence:
      enabled: true
      existingClaim: nextcloud-data

    cronjob:
      enabled: true

    startupProbe:
      enabled: true
      initialDelaySeconds: 60
      periodSeconds: 30
      timeoutSeconds: 10
      failureThreshold: 10
      successThreshold: 1

    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 4
        memory: 5Gi