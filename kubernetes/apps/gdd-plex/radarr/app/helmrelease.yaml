---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: cloudflare-tunnel
      namespace: network
  values:
    controllers:
      radarr:
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 6.0.2.10271@sha256:12b8348c57c556d837d28bbc73a8837fb7f402a29aba40385a0513dbd068881b
            env:
              TZ: America/Chicago
              RADARR__APP__INSTANCENAME: Radarr
              RADARR__LOG__LEVEL: info
              RADARR__AUTH__APIKEY:
                valueFrom:
                  secretKeyRef:
                    name: radarr-secret
                    key: api_key
              RADARR__AUTH__METHOD: External
              RADARR__LOG__ANALYTICSENABLED: "False"
              RADARR__LOG__DBENABLED: "False"
              RADARR__SERVER__PORT: &port 80
              RADARR__UPDATE__BRANCH: develop
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 150Mi
              limits:
                memory: 1000Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        ports:
          http:
            port: *port
    serviceMonitor:
      app:
        endpoints:
          - port: http
    route:
      app:
        hostnames: ["radarr.int.${SECRET_DOMAIN}"]
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/name: radarr
          gethomepage.dev/icon: radarr.svg
          gethomepage.dev/widget.type: radarr
          gethomepage.dev/widget.url: "http://radarr.gdd-plex.svc"
          gethomepage.dev/widget.key: "{{ \"{{HOMEPAGE_VAR_RADARR_API_KEY}}\" }}"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    persistence:
      config:
        type: persistentVolumeClaim
        storageClass: ceph-block
        accessMode: ReadWriteOnce
        size: 4Gi
      tmp:
        type: emptyDir
      media:
        type: nfs
        server: 10.0.30.134
        path: /medianfs
        globalMounts:
          - path: /mnt/media