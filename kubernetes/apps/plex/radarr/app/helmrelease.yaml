---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr
  namespace: plex
spec:
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 30m
  values:
    controllers:
      radarr:
        type: statefulset
        annotations:
          secret.reloader.stakater.com/reload: &secret radarr-secret
          
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.16.0
            env:
              RADARR__APP__INSTANCENAME: Radarr
              RADARR__APP__THEME: dark
              RADARR__LOG__ANALYTICSENABLED: "False"
              RADARR__LOG__DBENABLED: "False"
              RADARR__LOG__LEVEL: info
              RADARR__SERVER__PORT: &port 80
              RADARR__POSTGRES__HOST: "postgres16-rw.database.svc.cluster.local"
              RADARR__POSTGRES__PORT: "5432"
              RADARR__POSTGRES__USER: "plex_radarr"
              RADARR__POSTGRES__MAINDB: "plex_radarr"
              RADARR__AUTH__REQUIRED: Enabled
              RADARR__AUTH__METHOD: Forms
              RADARR__AUTH__ENABLED: True
              TZ: America/Chicago
            envFrom:
              - secretRef:
                  name: *secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
              runAsNonRoot: true
              runAsUser: 568
              runAsGroup: 568
              fsGroup: 568
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
              limits:
                memory: 300Mi
    service:
      app:
        controller: radarr
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Plex
          gethomepage.dev/name: Radarr
          gethomepage.dev/icon: radarr.svg
          gethomepage.dev/widget.type: radarr
          gethomepage.dev/widget.url: http://radarr.plex
          gethomepage.dev/widget.key: "{{`{{HOMEPAGE_VAR_RADARR_TOKEN}}`}}"
        hosts:
          - host: &host radarr.int.gddnet.io
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        enabled: true
        type: emptyDir
      tmp:
        type: emptyDir
      media:
        type: nfs
        server: 10.0.30.134
        path: /medianfs
        globalMounts:
          - path: /mnt/media