---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kromgo
  namespace: *app
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    controllers:
      kromgo:
        type: deployment
        replicas: 2
        strategy: RollingUpdate
        containers:
          main:
            image: &img
              repository: ghcr.io/kashalls/kromgo
              tag: v0.7.1@sha256:d8fca4ff9b696abc4ca019c76fa629c39e844e4d9435f4afac87a97b1eeae152
            env: &env
              TZ: "${CONFIG_TZ}"
              PROMETHEUS_URL: http://kube-prometheus-stack-prometheus:9090
              SERVER_HOST: &host "[::]"
              SERVER_PORT: &http 8080
              HEALTH_HOST: *host
              HEALTH_PORT: &health 8888
            securityContext: &sc
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: "10m"
              limits:
                memory: "128Mi"
            probes:
              liveness:
                enabled: true
                custom: true
                spec: &probes
                  httpGet:
                    path: /-/health
                    port: *health
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  <<: *probes
                  httpGet:
                    path: /-/ready
                    port: *health
    service:
      kromgo:
        controller: kromgo
        ports:
          http:
            port: *http
            protocol: HTTP
            appProtocol: http
          health:
            port: *health
            protocol: HTTP
            appProtocol: http

    route:
      kromgo:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Observability
          gethomepage.dev/name: kromgo
          gethomepage.dev/icon: kromgo.svg
        hostnames: ["badge-metrics.${SECRET_DOMAIN}"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: kromgo
                port: *http

    persistence:
      config:
        type: configMap
        name: kromgo-config
        globalMounts:
          - subPath: config.yaml
            path: /kromgo/config.yaml
            readOnly: true
      #fonts:
      #  type: configMap
      #  name: kromgo-fonts
      #  globalMounts:
      #    - subPath: TimesNewRamen.woff
      #      path: /kromgo/TimesNewRamen.woff
      #      readOnly: true
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 568
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: Always
        seccompProfile: { type: "RuntimeDefault" }
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app

